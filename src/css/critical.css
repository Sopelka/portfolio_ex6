body {
	margin: 0;
	font-size: 16px;
	font-family: 'Roboto', sans-serif;
}

img {
	max-width: 100%;
}

a {
	text-decoration: none;
}

h1,
h2,
h3,
h4,
h5,
h6,
figure,
p {
	padding: 0;
	margin: 0;
}

html {
	box-sizing: border-box;
}

*,
*:before,
*:after {
	box-sizing: inherit;
}

button {
	display: inline-block;
	border: none;
	margin: 0;
	padding: 0;
	width: auto;
	overflow: visible;
	outline: none;
	cursor: pointer;
	background: transparent;
	border-radius: 0; /* inherit font & color from ancestor */
	font: inherit;
	color: inherit;
	text-decoration: none;
	text-align: inherit; /* Normalize `line-height`. Cannot be changed from `normal` in Firefox 4+. */
	line-height: normal; /* Corrects font smoothing for webkit */
	-webkit-font-smoothing: inherit;
	-moz-osx-font-smoothing: inherit; /* Corrects inability to style clickable `input` types in iOS */
	-webkit-appearance: none; /* for input */
	-moz-appearance: none;
	-webkit-user-select: none; /* for button */
	-moz-user-select: none;
	user-select: none;
}

button::-moz-focus-inner {
	border: 0;
	padding: 0;
}

textarea,
input {
	height: auto;
	line-height: inherit;
	padding: 0;
	color: inherit;
	background: inherit;
	display: block;
	width: auto;
	border: none;
	border-radius: 0;
	font-family: inherit;
	font-size: inherit;
	outline: none;
}

textarea,
input:focus {
	box-shadow: none;
}

a:focus {
	border: 0;
	outline: none;
}

.input-wrap {
	position: relative;
}

@-webkit-keyframes translateY {

0% {
	transform: translateY(0);
	opacity: 0;
}

50% {
	transform: translateY(10px);
	opacity: 1;
}

100% {
	transform: translateY(0);
	opacity: 0;
}

}

@keyframes translateY {

0% {
	transform: translateY(0);
	opacity: 0;
}

50% {
	transform: translateY(10px);
	opacity: 1;
}

100% {
	transform: translateY(0);
	opacity: 0;
}

}


/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyaXRpY2FsLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUk7RUFDSSxTQUFTO0VBQ1QsZUFBZTtFQUNmLGlDQUFpQyxFQUFBOztBQUdyQztFQUNJLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSxxQkFBcUIsRUFBQTs7QUFHekI7OztFQUdJLFVBQVU7RUFBRSxTQUFTLEVBQUE7O0FBR3pCO0VBQ0ksc0JBQXNCLEVBQUE7O0FBRzFCO0VBQ0ksbUJBQW1CLEVBQUE7O0FBR3ZCO0VBQ0MscUJBQXFCO0VBQ3JCLFlBQVk7RUFDWixTQUFTO0VBQ1QsVUFBVTtFQUNWLFdBQVc7RUFDWCxpQkFBaUI7RUFDakIsYUFBYTtFQUNiLGVBQWU7RUFFZix1QkFBdUI7RUFDdkIsZ0JBQWdCO0VBRXBCLHVDQUFBO0VBQ0ksYUFBYTtFQUNiLGNBQWM7RUFDZCxxQkFBcUI7RUFDckIsbUJBQW1CO0VBRXZCLDRFQUFBO0VBQ0ksbUJBQW1CO0VBRXZCLHVDQUFBO0VBQ0ksK0JBQStCO0VBQy9CLGdDQUFnQztFQUVwQywrREFBQTtFQUNJLHdCQUF3QjtFQUFFLGNBQUE7RUFDMUIscUJBQXFCO0VBRXJCLHlCQUF5QjtFQUFFLGVBQUE7RUFDM0Isc0JBQXNCO0VBRXRCLGlCQUFpQixFQUFBOztBQUlsQjtFQUNDLFNBQVM7RUFDVCxVQUFVLEVBQUE7O0FBR1g7O0VBRUMsWUFBWTtFQUFFLG9CQUFvQjtFQUFFLFVBQVU7RUFBRSxjQUFjO0VBQUUsbUJBQW1CO0VBQUUsY0FBYztFQUFFLFdBQVc7RUFDaEgsWUFBWTtFQUFFLGdCQUFnQjtFQUFFLG9CQUFvQjtFQUFFLGtCQUFrQjtFQUFFLGFBQWEsRUFBQTs7QUFHeEY7O0VBRUksZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksU0FBUztFQUFFLGFBQWEsRUFBQTs7QUFHNUI7RUFDSCxrQkFBa0IsRUFBQTs7QUFHZjtFQUNDO0lBQ0Msd0JBQXdCO0lBQ3hCLFVBQVUsRUFBQTtFQUdYO0lBQ0MsMkJBQTJCO0lBQzNCLFVBQVUsRUFBQTtFQUdYO0lBQ0Msd0JBQXdCO0lBQ3hCLFVBQVUsRUFBQSxFQUFBOztBQWJaO0VBQ0M7SUFDQyx3QkFBd0I7SUFDeEIsVUFBVSxFQUFBO0VBR1g7SUFDQywyQkFBMkI7SUFDM0IsVUFBVSxFQUFBO0VBR1g7SUFDQyx3QkFBd0I7SUFDeEIsVUFBVSxFQUFBLEVBQUEiLCJmaWxlIjoiY3JpdGljYWwuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiICAgIGJvZHkge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICAgIH1cblxuICAgIGltZyB7IFxuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgYSB7IFxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IFxuICAgIH1cblxuICAgIGgxLGgyLGgzLGg0LGg1LGg2LFxuICAgIGZpZ3VyZSxcbiAgICBwIHsgXG4gICAgICAgIHBhZGRpbmc6IDA7IG1hcmdpbjogMDsgXG4gICAgfVxuXG4gICAgaHRtbCB7IFxuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyBcbiAgICB9XG5cbiAgICAqLCo6YmVmb3JlLCo6YWZ0ZXIgeyBcbiAgICAgICAgYm94LXNpemluZzogaW5oZXJpdDsgXG4gICAgfVxuXG4gICAgYnV0dG9uIHtcblx0ICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0ICAgIGJvcmRlcjogbm9uZTtcblx0ICAgIG1hcmdpbjogMDtcblx0ICAgIHBhZGRpbmc6IDA7XG5cdCAgICB3aWR0aDogYXV0bztcblx0ICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuXHQgICAgb3V0bGluZTogbm9uZTtcblx0ICAgIGN1cnNvcjogcG9pbnRlcjtcblxuXHQgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cdCAgICBib3JkZXItcmFkaXVzOiAwO1xuXG5cdC8qIGluaGVyaXQgZm9udCAmIGNvbG9yIGZyb20gYW5jZXN0b3IgKi9cblx0ICAgIGZvbnQ6IGluaGVyaXQ7XG5cdCAgICBjb2xvcjogaW5oZXJpdDtcblx0ICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0ICAgIHRleHQtYWxpZ246IGluaGVyaXQ7XG5cblx0LyogTm9ybWFsaXplIGBsaW5lLWhlaWdodGAuIENhbm5vdCBiZSBjaGFuZ2VkIGZyb20gYG5vcm1hbGAgaW4gRmlyZWZveCA0Ky4gKi9cblx0ICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG5cblx0LyogQ29ycmVjdHMgZm9udCBzbW9vdGhpbmcgZm9yIHdlYmtpdCAqL1xuXHQgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogaW5oZXJpdDtcblx0ICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuXG5cdC8qIENvcnJlY3RzIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MgKi9cblx0ICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgLyogZm9yIGlucHV0ICovXG5cdCAgICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XG5cblx0ICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7IC8qIGZvciBidXR0b24gKi9cblx0ICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG5cdCAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG5cdCAgICB1c2VyLXNlbGVjdDogbm9uZTtcblxuICAgIH1cblxuICAgIGJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciB7XG5cdCAgICBib3JkZXI6IDA7XG5cdCAgICBwYWRkaW5nOiAwO1xuICAgIH1cblxuICAgIHRleHRhcmVhLFxuICAgIGlucHV0IHtcblx0ICAgIGhlaWdodDogYXV0bzsgbGluZS1oZWlnaHQ6IGluaGVyaXQ7IHBhZGRpbmc6IDA7IGNvbG9yOiBpbmhlcml0OyBiYWNrZ3JvdW5kOiBpbmhlcml0OyBkaXNwbGF5OiBibG9jazsgd2lkdGg6IGF1dG87XG5cdCAgICBib3JkZXI6IG5vbmU7IGJvcmRlci1yYWRpdXM6IDA7IGZvbnQtZmFtaWx5OiBpbmhlcml0OyBmb250LXNpemU6IGluaGVyaXQ7IG91dGxpbmU6IG5vbmU7XG4gICAgfVxuXG4gICAgdGV4dGFyZWEsXG4gICAgaW5wdXQ6Zm9jdXMgeyBcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTsgXG4gICAgfVxuXG4gICAgYTpmb2N1cyB7IFxuICAgICAgICBib3JkZXI6IDA7IG91dGxpbmU6IG5vbmU7IFxuICAgIH1cblxuICAgIC5pbnB1dC13cmFwIHtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cblxuICAgIEBrZXlmcmFtZXMgdHJhbnNsYXRlWSB7XG5cdCAgICAwJSB7XG5cdFx0ICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcblx0XHQgICAgb3BhY2l0eTogMDtcblx0ICAgIH1cblxuXHQgICAgNTAlIHtcblx0XHQgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwcHgpO1xuXHRcdCAgICBvcGFjaXR5OiAxO1xuXHQgICAgfVxuXG5cdCAgICAxMDAlIHtcblx0XHQgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuXHRcdCAgICBvcGFjaXR5OiAwO1xuXHQgICAgfVxuICAgIH1cbiJdfQ== */
